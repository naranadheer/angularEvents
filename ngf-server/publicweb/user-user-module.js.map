{"version":3,"sources":["webpack:///./src/app/user/UserLogin.Componenet.html","webpack:///./src/app/user/UserLogin.Componenet.ts","webpack:///./src/app/user/UserProfile.Component.html","webpack:///./src/app/user/UserProfile.Component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.route.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"<h1>Login</h1>\\r\\n<hr>\\r\\n<div class=\\\"col-md-4\\\">\\r\\n  <form autocomplete=\\\"off\\\" #FormData=\\\"ngForm\\\" (ngSubmit)=\\\"login(FormData.value)\\\"  >\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"userName\\\">User Name:</label>\\r\\n      <em *ngIf=\\\"FormData.controls.UserName?.invalid && (FormData.controls.UserName?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input id=\\\"userName\\\" type=\\\"text\\\" (ngModel)=\\\"UserName\\\" required name=\\\"UserName\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"password\\\">Password:</label>\\r\\n      <em *ngIf=\\\"FormData.controls.Password?.invalid && (FormData.controls.Password?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input id=\\\"password\\\" type=\\\"password\\\" (ngModel)=\\\"Password\\\"  required name =\\\"Password\\\" class=\\\"form-control\\\"placeholder=\\\"Password...\\\" />\\r\\n    </div>\\r\\n        <span (mouseenter)=\\\"mouseoverLogin=true\\\" (mouseleave)=\\\"mouseoverLogin=false\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"FormData.invalid\\\" >Login</button>\\r\\n     </span>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\""," import { Component, OnInit } from '@angular/core';\r\n import { AuthService }  from './auth.Service';\r\n import { Router } from '@angular/router';\r\n\r\n@Component({\r\n\r\n   templateUrl: './UserLogin.Componenet.html',\r\n   styles: ['em{ float:right;color:#E05C65; padding-left:10px;}']\r\n\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n    constructor(private _auth: AuthService, private _router: Router) { }\r\n    mouseoverLogin;\r\n    login(formdata) {\r\n        console.log(this._auth.LoginAuth( formdata.UserName, formdata.Password));\r\n       if ( this._auth.LoginAuth( formdata.UserName, formdata.Password)) {\r\n         this._router.navigate(['events']);\n       }\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","module.exports = \"<div>\\r\\n    <h1>Edit Your Profile </h1>\\r\\n    <hr>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <form autocomplete=\\\"off\\\" novalidate [formGroup]=\\\"ProfileForm\\\">\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': ProfileForm.controls.firstName.touched && !validateFirstName()}\\\" >\\r\\n          <label for=\\\"firstName\\\">First Name:</label>\\r\\n        <em *ngIf=\\\"ProfileForm.controls.firstName.touched && ProfileForm.controls.firstName.errors?.pattern\\\">First Name should be in string </em>\\r\\n        <em *ngIf=\\\"ProfileForm.controls.firstName.touched && ProfileForm.controls.firstName.errors?.required\\\">Required </em>\\r\\n          <input id=\\\"firstName\\\" formControlName=\\\"firstName\\\"  type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': ProfileForm.controls.lastName.invalid}\\\">\\r\\n          <label for=\\\"lastName\\\">Last Name:</label>\\r\\n          <input id=\\\"lastName\\\" formControlName=\\\"lastName\\\" type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n        </div>\\r\\n  \\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveClick()\\\">Save</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\"","import { Component , OnInit, inject, Inject} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Toastr , TOASTER_TOKEN} from '../../common/toaster.service';\r\n\r\n@Component({\r\n  templateUrl: './UserProfile.Component.html',\r\n  styles: [`em{ float:right;color:#E05C65; padding-left:10px;}\r\n  .error input {background-color:#E3C3C5; }\r\n  `]\r\n\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  ProfileForm: FormGroup;\r\n private firstName: FormControl;\r\n private lastName: FormControl;\r\n\r\n constructor(@Inject(TOASTER_TOKEN) private toastr: Toastr) {\r\n\r\n }\r\n\r\n    ngOnInit() {\r\n\r\n      this.firstName = new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z].*')]);\r\n      this.lastName = new FormControl('123');\r\n\r\n      this.ProfileForm = new FormGroup({\r\n        firstName: this.firstName,\r\n        lastName: this.lastName\r\n\r\n      });\r\n\r\n    }\r\n\r\n    validateFirstName() {\r\n      return !this.ProfileForm.controls.firstName.invalid;\r\n    }\r\n\r\n    saveClick() {\r\n      console.log('saves');\r\n      this.toastr.success('Saved');\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserLoginComponent } from './UserLogin.Componenet';\r\nimport { ProfileComponent } from './UserProfile.Component';\r\nimport { UserRoutes } from './user.route';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [UserLoginComponent, ProfileComponent],\r\n  imports: [ CommonModule, RouterModule.forChild(UserRoutes), FormsModule , ReactiveFormsModule],\r\n  exports: [],\r\n  providers: [],\r\n})\r\nexport class UserModule {}\r\n\r\n\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { UserLoginComponent } from './UserLogin.Componenet';\r\nimport { ProfileComponent } from './UserProfile.Component';\r\n\r\n/* import { HomeComponent } from './';\r\nimport { Name2Component } from './'; */\r\n\r\n\r\n/* const routes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'path2', component: Name2Component },\r\n    { path: 'path3', component: Name3Component },\r\n    { path: 'path4', component: Name4Component },\r\n    { path: '**', component: PageNotFoundComponent }, */\r\n\r\n    //{ path: 'path/:routeParam', component: MyComponent },\r\n    //{ path: 'staticPath', component: ... },\r\n    //{ path: '**', component: ... },\r\n    //{ path: 'oldPath', redirectTo: '/staticPath' },\r\n    //{ path: ..., component: ..., data: { message: 'Custom' }\r\n//];\r\n\r\n\r\nexport const UserRoutes = [\r\n    { path: 'userLogin', component: UserLoginComponent },\r\n    { path: 'userProfile', component: ProfileComponent},\r\n    {path: '**', redirectTo: 'userLogin'}\r\n];\r\n"],"sourceRoot":""}